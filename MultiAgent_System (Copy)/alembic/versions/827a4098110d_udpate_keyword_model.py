"""udpate keyword model

Revision ID: 827a4098110d
Revises: 768e0393c950
Create Date: 2025-08-06 10:00:03.777646

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "827a4098110d"
down_revision: Union[str, None] = "768e0393c950"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Step 1: Rename the existing string column to preserve its data temporarily
    op.alter_column(
        "tbl_keywords", "scan_platform", new_column_name="scan_platform_old"
    )

    # Step 2: Create the new ARRAY column.
    # We use server_default for existing rows and to set the DB-level default.
    op.add_column(
        "tbl_keywords",
        sa.Column(
            "scan_platform",
            postgresql.ARRAY(sa.String(100)),
            nullable=False,
            server_default='{"website","youtube"}',
        ),
    )

    # Step 3: Migrate the data from the old column to the new one.
    # This command takes the old string and puts it into a single-element array.
    op.execute("UPDATE tbl_keywords SET scan_platform = ARRAY[scan_platform_old]")

    # Step 4: Drop the old column, as its data is now migrated.
    op.drop_column("tbl_keywords", "scan_platform_old")

    op.alter_column(
        "tbl_keywords", "created_by", existing_type=sa.UUID(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "tbl_keywords", "created_by", existing_type=sa.UUID(), nullable=True
    )
    op.alter_column(
        "tbl_keywords",
        "scan_platform",
        existing_type=sa.VARCHAR(length=100),
        nullable=True,
    )
    # ### end Alembic commands ###
