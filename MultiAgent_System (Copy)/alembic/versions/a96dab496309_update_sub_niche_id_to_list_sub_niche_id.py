"""update_sub_niche_id_to_list_sub_niche_id

Revision ID: a96dab496309
Revises: 21543f7d6e7b
Create Date: 2025-08-06 14:10:42.661416

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a96dab496309"
down_revision: Union[str, None] = "21543f7d6e7b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Step 1: Rename the existing sub_niche_id column to preserve its data temporarily
    op.alter_column("tbl_keywords", "sub_niche_id", new_column_name="sub_niche_id_old")

    # Step 2: Create the new ARRAY column for list_sub_niche_id
    op.add_column(
        "tbl_keywords",
        sa.Column(
            "list_sub_niche_id",
            postgresql.ARRAY(postgresql.UUID(as_uuid=True)),
            nullable=True,
        ),
    )

    # Step 3: Migrate the data from the old column to the new one.
    # Convert single UUID to array format
    op.execute(
        """
        UPDATE tbl_keywords 
        SET list_sub_niche_id = ARRAY[sub_niche_id_old]::uuid[] 
        WHERE sub_niche_id_old IS NOT NULL
    """
    )

    # Step 4: Drop the old column, as its data is now migrated.
    op.drop_column("tbl_keywords", "sub_niche_id_old")

    # Step 5: Update the keyword history table as well
    op.alter_column(
        "tbl_keyword_histories", "sub_niche_id", new_column_name="sub_niche_id_old"
    )

    op.add_column(
        "tbl_keyword_histories",
        sa.Column(
            "list_sub_niche_id",
            postgresql.ARRAY(postgresql.UUID(as_uuid=True)),
            nullable=True,
        ),
    )

    op.execute(
        """
        UPDATE tbl_keyword_histories 
        SET list_sub_niche_id = ARRAY[sub_niche_id_old]::uuid[] 
        WHERE sub_niche_id_old IS NOT NULL
    """
    )

    op.drop_column("tbl_keyword_histories", "sub_niche_id_old")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Revert keyword history table
    op.add_column(
        "tbl_keyword_histories",
        sa.Column("sub_niche_id", postgresql.UUID(as_uuid=True), nullable=True),
    )

    op.execute(
        """
        UPDATE tbl_keyword_histories 
        SET sub_niche_id = list_sub_niche_id[1] 
        WHERE list_sub_niche_id IS NOT NULL AND array_length(list_sub_niche_id, 1) > 0
    """
    )

    op.drop_column("tbl_keyword_histories", "list_sub_niche_id")

    # Revert keywords table
    op.add_column(
        "tbl_keywords",
        sa.Column("sub_niche_id", postgresql.UUID(as_uuid=True), nullable=True),
    )

    op.execute(
        """
        UPDATE tbl_keywords 
        SET sub_niche_id = list_sub_niche_id[1] 
        WHERE list_sub_niche_id IS NOT NULL AND array_length(list_sub_niche_id, 1) > 0
    """
    )

    op.drop_column("tbl_keywords", "list_sub_niche_id")
    # ### end Alembic commands ###
