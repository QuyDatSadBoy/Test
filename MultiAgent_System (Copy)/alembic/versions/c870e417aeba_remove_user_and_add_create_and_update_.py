"""remove user and add create and update field

Revision ID: c870e417aeba
Revises: c6c2a371b1ea
Create Date: 2025-08-05 14:07:37.613666

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c870e417aeba"
down_revision: Union[str, None] = "c6c2a371b1ea"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_tbl_users_id', table_name='tbl_users')
    # op.drop_table('tbl_users')
    op.add_column("tbl_domains", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("tbl_domains", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.add_column("tbl_domains", sa.Column("created_by", sa.UUID(), nullable=True))
    op.add_column("tbl_domains", sa.Column("updated_by", sa.UUID(), nullable=True))
    op.add_column(
        "tbl_keyword_histories", sa.Column("created_by", sa.UUID(), nullable=True)
    )
    op.add_column(
        "tbl_keyword_histories", sa.Column("updated_by", sa.UUID(), nullable=True)
    )
    op.add_column("tbl_keywords", sa.Column("created_by", sa.UUID(), nullable=True))
    op.add_column("tbl_keywords", sa.Column("updated_by", sa.UUID(), nullable=True))
    op.add_column("tbl_niches", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("tbl_niches", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.add_column("tbl_niches", sa.Column("created_by", sa.UUID(), nullable=True))
    op.add_column("tbl_niches", sa.Column("updated_by", sa.UUID(), nullable=True))
    op.add_column(
        "tbl_subniches", sa.Column("created_at", sa.DateTime(), nullable=True)
    )
    op.add_column(
        "tbl_subniches", sa.Column("updated_at", sa.DateTime(), nullable=True)
    )
    op.add_column("tbl_subniches", sa.Column("created_by", sa.UUID(), nullable=True))
    op.add_column("tbl_subniches", sa.Column("updated_by", sa.UUID(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tbl_subniches", "updated_by")
    op.drop_column("tbl_subniches", "created_by")
    op.drop_column("tbl_subniches", "updated_at")
    op.drop_column("tbl_subniches", "created_at")
    op.drop_column("tbl_niches", "updated_by")
    op.drop_column("tbl_niches", "created_by")
    op.drop_column("tbl_niches", "updated_at")
    op.drop_column("tbl_niches", "created_at")
    op.drop_column("tbl_keywords", "updated_by")
    op.drop_column("tbl_keywords", "created_by")
    op.drop_column("tbl_keyword_histories", "updated_by")
    op.drop_column("tbl_keyword_histories", "created_by")
    op.drop_column("tbl_domains", "updated_by")
    op.drop_column("tbl_domains", "created_by")
    op.drop_column("tbl_domains", "updated_at")
    op.drop_column("tbl_domains", "created_at")
    op.create_table(
        "tbl_users",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "password", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="tbl_users_pkey"),
        sa.UniqueConstraint("email", name="tbl_users_email_key"),
    )
    op.create_index("ix_tbl_users_id", "tbl_users", ["id"], unique=False)
    # ### end Alembic commands ###
